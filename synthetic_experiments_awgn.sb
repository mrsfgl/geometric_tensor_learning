#!/bin/bash --login

########## SBATCH Lines for Resource Request ##########
 
#SBATCH --time=04:00:00             # limit of wall clock time - how long the job will run (same as -t)
#SBATCH --nodes=10                   # number of different nodes - could be an exact number or a range of nodes (same as -N)
#SBATCH --ntasks=10                  # number of tasks - how many tasks (nodes) that you require (same as -n)
#SBATCH --cpus-per-task=1           # number of CPUs (or cores) per task (same as -c)
#SBATCH --mem-per-cpu=2G            # memory required per allocated CPU (or core) - amount of memory (in bytes)
#SBATCH --job-name=synthetic_experiment1      # you can give your job a name for easier identification (same as -J)
#SBATCH --account=charms
#SBATCH --mail-type=BEGIN,END
#SBATCH -v -v -v
#SBATCH --output=/mnt/home/sofuoglu/Documents/Python/geometric_tensor_learning/sbatch/slurm-%j.out
 
########## Command Lines for Job Running ##########

cd /mnt/home/sofuoglu/Documents/Python/geometric_tensor_learning

conda activate

srun -n 1 python util/syn_exps.py &
srun -n 1 python util/syn_exps.py &
srun -n 1 python util/syn_exps.py &
srun -n 1 python util/syn_exps.py &
srun -n 1 python util/syn_exps.py &
srun -n 1 python util/syn_exps.py &
srun -n 1 python util/syn_exps.py &
srun -n 1 python util/syn_exps.py &
srun -n 1 python util/syn_exps.py &
srun -n 1 python util/syn_exps.py &
wait

scontrol show job $SLURM_JOB_ID     ### write job information to SLURM output file.
js -j $SLURM_JOB_ID                 ### write resource usage to SLURM output file (powertools command).